---
import { ViewTransitions } from 'astro:transitions';
import '../css/app.css';
import Footer from '../components/Footer.astro';
import Nav from '../components/Nav.astro';

interface Props {
	title?: string;
}

const { title } = Astro.props;
---

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>{ title ? title : 'AMG - Dev' }</title>

    <!-- Fonts -->
    <link href="https://fonts.cdnfonts.com/css/poppins" rel="stylesheet">

    <!-- Style -->
    <ViewTransitions />
</head>
<body class="scrollbar">
    <div class="w-full overflow-hidden text-white">

        <div class="w-full h-full">
            <Nav />

            <main>
                <slot />
            </main>

            <Footer />
        </div>
    </div>
</body>
</html>

<style is:global>
	html {
        font-family: 'Poppins', sans-serif;
		background: #020617;
		background-size: 224px;
		color-scheme: dark light;
        scroll-behavior: smooth;
	}

    @media(prefers-reduce-motion: reduce){
        html{
            scroll-behavior: auto;
        }
    }
</style>

<script is:inline>
    function scrollToSection(sectionId) {
        var section = document.getElementById(sectionId);
        if (section) {
            section.scrollIntoView({ behavior: 'smooth' });
        }
    }

    let scrollTimeout;
    const headerNav = document.getElementById('header-nav');
    const fixed = document.getElementById('fixed');
    const pinOn = document.getElementById('pin-on');
    const pinOff = document.getElementById('pin-off');
    let swich = false;

    function updateIcons() {
        if (swich) {
            pinOn.classList.add('hidden');
            pinOff.classList.remove('hidden');
        } else {
            pinOn.classList.remove('hidden');
            pinOff.classList.add('hidden');
        }
    }

    function updateEventListeners() {
        if (swich) {
            window.removeEventListener('scroll', handleScroll);
            window.removeEventListener('mousemove', handleMouseMove);
        } else {
            window.addEventListener('scroll', handleScroll);
            window.addEventListener('mousemove', handleMouseMove);
        }
    }

    function handleScroll() {
        if (window.scrollY === 0) {
            headerNav.classList.remove('hide-nav');
            return;
        }

        headerNav.classList.remove('hide-nav');

        clearTimeout(scrollTimeout);
        scrollTimeout = setTimeout(() => {
            headerNav.classList.add('hide-nav');
        }, 1500);
    }

    function handleMouseMove(event) {
        if (event.clientY < 100) {
            headerNav.classList.remove('hide-nav');
        }
    }

    fixed.addEventListener('click', () => {
        swich = !swich;
        updateIcons();
        updateEventListeners();
    });

    updateIcons();
    updateEventListeners();
</script>